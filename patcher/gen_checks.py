from collections import defaultdict
from typing import DefaultDict
import yaml
import re

with open('../../sslib/checks.yaml') as f:
    all_patches = yaml.safe_load(f)

stage_re = re.compile(
    r"stage/(?P<stage>[^/]+)/r(?P<room>[0-9]+)/l(?P<layer>[0-9]+)/(?P<objname>[a-zA-Z]+)(/(?P<objid>[^/]+))?"
)
event_re = re.compile(r"event/(?P<eventfile>[^/]+)/(?P<eventid>[^/]+)")
oarc_re = re.compile(r"oarc/(?P<stage>[^/]+)/l(?P<layer>[^/]+)")
shop_smpl_re = re.compile(r"ShpSmpl/(?P<index>[0-9]+)")

id_names = {
    "Item": "flag",
    "Soil": "flag",
    "TBox": "tbox_id",
    "SwSB": "index",
    "EBc": "id",
    "chest": "flag",
}

with open('src/checks_gen.rs','w') as f:
    f.write("""// DO NOT EDIT
// This file is autogenerated by gen_checks.py
use crate::checks::*;
use crate::checks::PatchKind::*;

pub const CHECKS: &[(&'static str, &'static [PatchKind])] = &[
""")
    
    for name, definition in all_patches.items():
        f.write(f'("{name}", &[\n')
        for path in definition.get("Paths", []):
            if (stagematch := stage_re.match(path)):
                stage = stagematch.group("stage")
                room = stagematch.group("room")
                layer = stagematch.group("layer")
                objname = stagematch.group("objname")
                f.write(f'{objname} {{\n')
                f.write(f'stage: "{stage}",\n')
                f.write(f'room: {room},\n')
                f.write(f'layer: {layer},\n')
                if objidname := id_names.get(objname):
                    objid = stagematch.group("objid")
                    f.write(f'{objidname}: {objid},\n')
                f.write("},")
            elif (event_match := event_re.match(path)):
                file = event_match.group("eventfile")
                index = event_match.group("eventid")
                if index.isnumeric():
                    f.write('FlowById {\n')
                    f.write(f'file: "{file}",')
                    f.write(f'index: {index},')
                    f.write('},\n')
                else:
                    f.write('FlowByName {\n')
                    f.write(f'file: "{file}",')
                    f.write(f'name: "{index}",')
                    f.write('},\n')
            elif (oarc_match := oarc_re.match(path)):
                stage = oarc_match.group("stage")
                layer = oarc_match.group("layer")
                f.write('Oarc {\n')
                f.write(f'stage: "{stage}",')
                f.write(f'layer: {layer},')
                f.write('},\n')
            elif (shop_smpl_match := shop_smpl_re.match(path)):
                index = shop_smpl_match.group("index")
                f.write('ShpSmpl {\n')
                f.write(f'index: {index},')
                f.write('},\n')
            

        f.write("]),")
    f.write("];")
