// DO NOT EDIT
// This file is autogenerated by gen_patches.py
use crate::patches::{
    do_custom_obj_patch, do_custom_sobj_patch, find_highest_used_id, zero_pad, ByIdExt,
    InvalidPatchError,
};
use bzs::structs::*;

pub fn base_stage_patches(
    stage: &str,
    room: Option<u8>,
    bzs: &mut BzsEntries,
) -> Result<(), InvalidPatchError> {
    let mut highest_used_id = find_highest_used_id(bzs);
    match stage {
        "S100" => match room {
            Some(0) => {
                // Fi text near waking water
                bzs.lay[2].obj.remove_by_id(0xFCDB)?;
            }
            _ => (),
        },
        "B100" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 5,
                        night: 0,
                        storyflag: 530,
                    },
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 67,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 206,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: 83,
                    },
                    LYSE {
                        layer: 13,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(0) => {
                // only play CS when ghirahim hasn't been defeated
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.storyflag = 83;
                // move first time loadzone to layer 0
            }
            _ => (),
        },
        "B100_1" => match room {
            Some(0) => {
                // Fi text after skyview CS
                let obj = bzs.lay[2].obj.modify_by_id(0xFC73)?;
                obj.params1 = 0xFFFFFFF1;
                do_custom_obj_patch(obj, "trigscenefid", 104);
                // Fi text after skyview CS
                // loadzone to outside
                // Skyview CS remove item
                let obj = bzs.evnt.get_mut(1).unwrap();
                obj.sceneflag1 = 104;
                obj.item = -1;
                obj.storyflag1 = -1;
                // Loadzone to outside layer 3
                bzs.lay[3].stag.remove_by_id(0xFC75)?;
                // Remove small cutscene
                bzs.lay[1].stag.remove_by_id(0xFC73)?;
                // Remove fake trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC63)?;
            }
            _ => (),
        },
        "B101" => match room {
            Some(0) => {
                // Open door after boss
                let obj = bzs.lay[1].objs.modify_by_id(0xFC13)?;
                obj.params1 = 0xFFFD3000;
                // Open door after boss
                let obj = bzs.lay[3].objs.modify_by_id(0xFC15)?;
                obj.params1 = 0xFFFD3000;
            }
            _ => (),
        },
        "B101_1" => match room {
            Some(0) => {
                // AC CS remove item and flags
                let obj = bzs.evnt.get_mut(1).unwrap();
                obj.item = -1;
                obj.storyflag1 = 900;
                obj.storyflag2 = -1;
                // Fi text before AC CS
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFF01;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.angley = 0xFFFF;
                obj.anglez = 0x4F07;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"NpcTke");
                do_custom_obj_patch(obj, "trigscenefid", 86);
                do_custom_obj_patch(obj, "untrigscenefid", 85);
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Loadzone to outside
                let obj = bzs.lay[0].stag.modify_by_id(0xFC0B)?;
                obj.params1 = 0xC303FF02;
                obj.anglez = 0xFFFF;
            }
            _ => (),
        },
        "B210" => match room {
            Some(0) => {
                // ET CS remove item
                let obj = bzs.evnt.get_mut(2).unwrap();
                obj.item = -1;
                // Fi text after ET CS
                let obj = bzs.lay[0].obj.modify_by_id(0xFC09)?;
                obj.params1 = 0xFFFFFFF1;
                // Loadzone to outside
                let obj = bzs.lay[0].stag.modify_by_id(0xFC0E)?;
                obj.params1 = 0xC303FF00;
            }
            _ => (),
        },
        "B201_1" => match room {
            Some(0) => {
                // FS CS remove item and flags
                let obj = bzs.evnt.get_mut(0).unwrap();
                obj.item = -1;
                obj.storyflag1 = 901;
                // Fi text before FS CS
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFF01;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.angley = 0xFFFF;
                obj.anglez = 0x76C7;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"NpcTke");
                do_custom_obj_patch(obj, "trigscenefid", 95);
                do_custom_obj_patch(obj, "untrigscenefid", 121);
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Loadzone to outside
                let obj = bzs.lay[0].stag.modify_by_id(0xFC0A)?;
                obj.params1 = 0xC3030001;
                obj.anglez = 0xFFFF;
            }
            _ => (),
        },
        "B301" => match room {
            Some(0) => {
                // Sandship CS remove item
                let obj = bzs.evnt.get_mut(1).unwrap();
                obj.storyflag1 = -1;
                obj.storyflag2 = 933;
                obj.item = -1;
                // Fi text before FS CS
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFF01;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.angley = 0xFFFF;
                obj.anglez = 0x9CAC;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"NpcTke");
                do_custom_obj_patch(obj, "trigscenefid", 84);
                do_custom_obj_patch(obj, "untrigscenefid", 87);
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Fi text to force leave boss room
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFF0B;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.angley = 0xFFFF;
                obj.anglez = 0x9CB6;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"NpcTke");
                do_custom_obj_patch(obj, "trigscenefid", 85);
                do_custom_obj_patch(obj, "untrigscenefid", 255);
                do_custom_obj_patch(obj, "untrigstoryfid", 907);
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[1].obj.push(mobj);
                // Loadzone to outside
                let obj = bzs.lay[1].stag.modify_by_id(0xFC12)?;
                obj.params1 = 0xC303FF03;
                obj.anglez = 0xFFFF;
            }
            _ => (),
        },
        "D003_0" => match room {
            Some(0) => {
                // Fi text
                bzs.lay[0].obj.remove_by_id(0xFC0F)?;
                // Fi text reach the mark
                bzs.lay[0].obj.remove_by_id(0xFC11)?;
            }
            _ => (),
        },
        "D003_2" => match room {
            Some(0) => {
                // Fi text
                bzs.lay[0].obj.remove_by_id(0xFC33)?;
                // Fi text reach the mark
                bzs.lay[0].obj.remove_by_id(0xFC3C)?;
                // Fi text wrong side
                bzs.lay[0].obj.remove_by_id(0xFC32)?;
            }
            _ => (),
        },
        "D003_3" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Fi text
                bzs.lay[0].obj.remove_by_id(0xFC1B)?;
                // Fi text reach the mark
                bzs.lay[0].obj.remove_by_id(0xFC1D)?;
            }
            _ => (),
        },
        "D003_7" => match room {
            Some(0) => {
                // Fi text
                bzs.lay[0].obj.remove_by_id(0xFC0B)?;
            }
            _ => (),
        },
        "D003_8" => match room {
            Some(0) => {
                // remove unused layer
                bzs.lay[6].obj.remove_by_id(0xFC08)?;
                // remove last triforce cutscene
                bzs.lay[0].stag.remove_by_id(0xFC06)?;
                // Scene Change for Wisdom layer
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0x3EFFFF01;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.sizex = 10000f32;
                obj.sizey = 10000f32;
                obj.sizez = 10000f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.name = zero_pad(b"ScChang");
                bzs.lay[1].stag.push(mobj);
                // Scene Change for Power layer
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0x3DFFFF02;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.sizex = 10000f32;
                obj.sizey = 10000f32;
                obj.sizez = 10000f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.name = zero_pad(b"ScChang");
                bzs.lay[2].stag.push(mobj);
                // Scene Change for Courage layer
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0x40FFFF03;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.sizex = 10000f32;
                obj.sizey = 10000f32;
                obj.sizez = 10000f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.name = zero_pad(b"ScChang");
                bzs.lay[3].stag.push(mobj);
                // layer 2 in Wisdom room
                let obj = bzs.scen.get_mut(1).unwrap();
                obj.layer = 2;
            }
            _ => (),
        },
        "F000" => match room {
            None => { // Trial
                 // Trial
                 // Trial
                 // Trialarcremove
                 // Trialarcremove
                 // Trialarcremove
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // Owlan on layer 6 Model
                 // Owlan on layer 6 Model 2
                 // delete people on bridge 1
                 // delete people on bridge 2
                 // delete people on bridge 3
            }
            Some(0) => {
                // Trial
                // Trial
                // Trial
                bzs.lay[4].obj.remove_by_id(0xFDD6)?;
                // Trial
                bzs.lay[4].stag.remove_by_id(0xFDFF)?;
                // Wryna cs
                bzs.lay[4].obj.remove_by_id(0xFDCE)?;
                // Wryna cs
                bzs.lay[6].obj.remove_by_id(0xFDD2)?;
                // Wryna l4 1
                bzs.lay[4].obj.remove_by_id(0xFDCD)?;
                // Wryna l6
                bzs.lay[6].obj.remove_by_id(0xFDD1)?;
                // Fi Text after trial
                bzs.lay[4].obj.remove_by_id(0xFDF4)?;
                // Fi Text after trial
                bzs.lay[5].obj.remove_by_id(0xFDFF)?;
                // Fi Text on Stairs
                bzs.lay[4].obj.remove_by_id(0xFDCB)?;
                // Sand Size fix
                let obj = bzs.lay[0].sobj.modify_by_id(0xFD03)?;
                obj.sizex = 3.2f32;
                obj.sizey = 4.5f32;
                obj.sizez = 3.2f32;
                // Fledge for Arrow minigame
                let obj = bzs.lay[4].obj.modify_by_id(0xFDD9)?;
                do_custom_obj_patch(obj, "trigstoryfid", 1114);
                // Fledge for Arrow minigame
                let obj = bzs.lay[6].obj.modify_by_id(0xFDD8)?;
                do_custom_obj_patch(obj, "trigstoryfid", 1114);
                // Fix Owlan disappearing after Harp
                let obj = bzs.lay[4].obj.modify_by_id(0xFDDD)?;
                do_custom_obj_patch(obj, "untrigstoryfid", u32::MAX);
                // Owlan on layer 6
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFF31;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = -5296.68310546875f32;
                obj.posy = 1237.6900634765625f32;
                obj.posz = -6928.24267578125f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0x2A3B;
                obj.id = 0xFDDD;
                obj.name = zero_pad(b"NpcSkn");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[6].obj.push(mobj);
                // Move Chest on goddess statue
                let obj = bzs.lay[1].objs.modify_by_id(0xFDE9)?;
                obj.posx = 666.327332f32;
                obj.posy = 2893.23999f32;
                obj.posz = -13083.1475f32;
                obj.angley = 0xE8C7;
                // Move Chest on goddess statue to layer 0
                // Goddess Statue chests
                bzs.lay[2].objs.remove_by_id(0xFDEB)?;
                // Goddess Statue chests
                bzs.lay[4].objs.remove_by_id(0xFDF7)?;
                // Goddess Statue chests
                bzs.lay[5].objs.remove_by_id(0xFE00)?;
                // Goddess Statue chests
                bzs.lay[10].objs.remove_by_id(0xFDE6)?;
                // untrigger fledge on academy after bow layer 4
                let obj = bzs.lay[4].obj.modify_by_id(0xFDCF)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 1114);
                // untrigger fledge on academy after bow layer 6
                let obj = bzs.lay[6].obj.modify_by_id(0xFDD3)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 1114);
                // delete Wryna l4 2
                bzs.lay[4].obj.remove_by_id(0xFDF1)?;
                // delete people on bridge 1
                bzs.lay[1].obj.remove_by_id(0x5D7)?;
                // delete people on bridge 2
                bzs.lay[1].obj.remove_by_id(0x5D8)?;
                // delete people on bridge 3
                bzs.lay[1].obj.remove_by_id(0x5D9)?;
                // delete parrow before wryna
                bzs.lay[4].obj.remove_by_id(0xFDC7)?;
                // always spawn parrow for quest
                let obj = bzs.lay[4].obj.modify_by_id(0xFDD4)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // delete parrow before wryna 2
                bzs.lay[6].obj.remove_by_id(0xFDCD)?;
                // always spawn parrow for quest 2
                let obj = bzs.lay[6].obj.modify_by_id(0xFDD6)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // delete parrow CS
                bzs.lay[4].obj.remove_by_id(0xFDF9)?;
                // delete parrow CS 2
                bzs.lay[6].obj.remove_by_id(0xFDEA)?;
                // extra Arrow Pot next to Bazaar Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 2010f32;
                obj.posy = 390.534943f32;
                obj.posz = 830f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove confounding propeller dowsing
                bzs.lay[0].stag.remove_by_id(0xFD4E)?;
                // Remove fake Faron trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFD4B)?;
                // Remove fake Lanayru trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFD51)?;
                // Remove fake Eldin trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFD4D)?;
            }
            _ => (),
        },
        "F001r" => match room {
            Some(0) => {
                // Fi Text in Academy at night
                bzs.lay[4].obj.remove_by_id(0xFC80)?;
                // Move Fledge closer to Link's room
                let obj = bzs.lay[3].obj.modify_by_id(0xFC77)?;
                obj.posx = 850f32;
                obj.posz = -1700f32;
                // Fledge Pouch Check Storyflag at night
                let obj = bzs.lay[4].obj.modify_by_id(0xFC7E)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 923);
                // Fledge Pouch Check Storyflag at day
                let obj = bzs.lay[3].obj.modify_by_id(0xFC78)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 923);
                // Keep cawlin with Letter check
                let obj = bzs.lay[3].obj.modify_by_id(0xFC7A)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 2047);
                // Toilethand trig
                let obj = bzs.lay[4].obj.modify_by_id(0xFC76)?;
                do_custom_obj_patch(obj, "trigstoryfid", 140);
                // Toilethand inv
                let obj = bzs.lay[4].obj.modify_by_id(0xFC7B)?;
                do_custom_obj_patch(obj, "trigstoryfid", 140);
            }
            Some(1) => {
                // Fledge trains without wryna
                let obj = bzs.lay[4].obj.modify_by_id(0xFC10)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // Startflags 1
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 761f32;
                obj.posy = -22f32;
                obj.posz = -2260f32;
                obj.sizex = 1000f32;
                obj.sizey = 1000f32;
                obj.sizez = 1000f32;
                obj.anglex = 0x1B;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.name = zero_pad(b"SwAreaT");
                bzs.lay[1].stag.push(mobj);
                // Startflags 2
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 761f32;
                obj.posy = -22f32;
                obj.posz = -2260f32;
                obj.sizex = 1000f32;
                obj.sizey = 1000f32;
                obj.sizez = 1000f32;
                obj.anglex = 0xC6;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.name = zero_pad(b"SwAreaT");
                bzs.lay[1].stag.push(mobj);
            }
            Some(5) => {
                // Olwan Npc after Kikwis
                let obj = bzs.lay[3].obj.modify_by_id(0xFC0A)?;
                do_custom_obj_patch(obj, "trigstoryfid", 57);
                // untrigger other owlan
                let obj = bzs.lay[3].obj.modify_by_id(0xFC0B)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 57);
            }
            _ => (),
        },
        "F002r" => match room {
            Some(0) => {
                // Delete cutscene
                bzs.lay[1].stag.remove_by_id(0xFC11)?;
                // Delete cutscene
                bzs.lay[1].stag.remove_by_id(0xFC13)?;
            }
            _ => (),
        },
        "F004r" => match room {
            Some(0) => {
                // Delete goddess chest fi text
                bzs.lay[0].obj.remove_by_id(0xFC7D)?;
            }
            _ => (),
        },
        "F005r" => match room {
            Some(0) => {
                // Always Spawn Parrow
                let obj = bzs.lay[2].obj.modify_by_id(0xFC15)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // Delete Parrow before Crystal Quest
                bzs.lay[2].obj.remove_by_id(0xFC13)?;
            }
            _ => (),
        },
        "F008r" => match room {
            Some(0) => {
                // Goddess Sword chest
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF3;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 0f32;
                obj.posy = 42.820003509521484f32;
                obj.posz = 75f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xBE02;
                obj.id = 0xFC10;
                obj.name = zero_pad(b"TBox");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].objs.push(mobj);
                // Emerald Tablet chest
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF3;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 0f32;
                obj.posy = 87.5f32;
                obj.posz = -1130f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xBC02;
                obj.id = 0xFC10;
                obj.name = zero_pad(b"TBox");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].objs.push(mobj);
                // Delete SwrdSt
                bzs.lay[0].obj.remove_by_id(0xFC05)?;
                // Delete Crest
                bzs.lay[0].obj.remove_by_id(0xFC02)?;
            }
            _ => (),
        },
        "F010r" => match room {
            Some(0) => {
                // Delete Faron Trial Dowsing
                bzs.lay[0].obj.remove_by_id(0xFC02)?;
                // Delete Lanayru Trial Dowsing
                bzs.lay[0].obj.remove_by_id(0xFC03)?;
                // Delete Eldin Trial Dowsing
                bzs.lay[0].obj.remove_by_id(0xFC04)?;
                // Remove fake Faron trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC09)?;
                // Remove fake Lanayru trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC08)?;
                // Remove fake Eldin trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC07)?;
            }
            _ => (),
        },
        "F011r" => match room {
            Some(0) => {
                // Delete Lumpy Pumpkin Cutscene 1
                bzs.lay[0].obj.remove_by_id(0xFC42)?;
                // Delete Lumpy Pumpkin Cutscene 2
                bzs.lay[0].obj.remove_by_id(0xFC43)?;
                // Delete  new Lumpy chandelier Cutscene 1
                bzs.lay[0].obj.remove_by_id(0xFC44)?;
                // Delete  new Lumpy chandelier Cutscene 2
                bzs.lay[0].obj.remove_by_id(0xFC45)?;
            }
            _ => (),
        },
        "F012r" => match room {
            Some(0) => {
                // Batreaux unlock
                let obj = bzs.lay[0].objs.modify_by_id(0xFC00)?;
                obj.anglex = 0xFF00;
                // Remove Crystal Dowsing
                bzs.lay[1].obj.remove_by_id(0xFC23)?;
            }
            _ => (),
        },
        "F013r" => match room {
            Some(0) => {
                // Sparrot spawn
                let obj = bzs.lay[0].obj.modify_by_id(0xFC0F)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // Sparrot at night
                bzs.lay[2].obj.remove_by_id(0xFC17)?;
            }
            _ => (),
        },
        "F020" => match room {
            Some(0) => {
                // Fi text about goddess cubes
                bzs.lay[2].obj.remove_by_id(0xFD0F)?;
                // remove faron loadzone after groose
                bzs.lay[0].stag.remove_by_id(0xFC96)?;
                // never untrigger first faron loadzone
                let obj = bzs.lay[0].stag.modify_by_id(0xFC8B)?;
                do_custom_sobj_patch(obj, "untrigstoryfid", u32::MAX);
                // remove Wryna requirement for orielle
                let obj = bzs.lay[2].obj.modify_by_id(0xFCFB)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // remove Wryna requirement for orielle's bird
                let obj = bzs.lay[2].obj.modify_by_id(0xFD0E)?;
                obj.params1 = 0xCBFFFFFF;
                // Remove confounding propeller dowsing
                bzs.lay[0].stag.remove_by_id(0xFCAD)?;
                // Remove fake Faron trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCAA)?;
                // Remove fake Lanayru trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCB0)?;
                // Remove fake Eldin trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCAC)?;
                // Remove fake Skyloft trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCB3)?;
            }
            None => { // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
                 // unnecessary oarcs
            }
            _ => (),
        },
        "F023" => match room {
            Some(0) => {
                // Strich layer 1
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFCFF;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = -170960.21875f32;
                obj.posy = 18262f32;
                obj.posz = -51642.58984375f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0xDC72;
                obj.anglez = 0x2D51;
                obj.id = 0xFCEF;
                obj.name = zero_pad(b"NpcIcgK");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[1].obj.push(mobj);
                // void out during bug heaven minigame
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFCFFF06;
                obj.params2 = 0xFFDFFFFF;
                obj.posx = -165885f32;
                obj.posy = 16506f32;
                obj.posz = -52597f32;
                obj.sizex = 50463f32;
                obj.sizey = 1000f32;
                obj.sizez = 50463f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"PlRsTag");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[13].stag.push(mobj);
                // Delete Isle of Songs intro cutscene
                bzs.lay[0].obj.remove_by_id(0xFC89)?;
                // Fi text after levias
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0x74C32301;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0xFFFF;
                obj.anglez = 0x2EE3;
                obj.id = 0xFC13;
                obj.name = zero_pad(b"NpcTke");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Gossip Stone
                // Remove confounding propeller dowsing
                bzs.lay[0].stag.remove_by_id(0xFCAE)?;
                // Remove fake Faron trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCAB)?;
                // Remove fake Lanayru trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCB1)?;
                // Remove fake Eldin trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCAD)?;
                // Remove fake Skyloft trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCB4)?;
                // Remove fake Skyloft trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCA3)?;
                // Remove isle of songs puzzle complete cutscene
                let obj = bzs.lay[0].obj.modify_by_id(0xFC07)?;
                obj.params1 = 0xFFFF01C5;
            }
            None => { // Stritch model
                 // Gossip Stone
            }
            _ => (),
        },
        "F100" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 5,
                        night: 0,
                        storyflag: 479,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
                // Yerbal
                // Trial
                // Trial
                // Trial
                // Lake floria door
            }
            Some(0) => {
                // Yerbal
                // Yerbal Spawn
                let obj = bzs.lay[4].obj.modify_by_id(0x52B6)?;
                do_custom_obj_patch(obj, "trigstoryfid", 206);
                // Trial
                // Trial
                // Lake floria door
                // Lake floria door
                // Lake floria door
                // Remove Fi text Not letting you leave machi 1
                bzs.lay[1].obj.remove_by_id(0xEBB)?;
                // Remove Fi text Not letting you leave machi 2
                bzs.lay[1].obj.remove_by_id(0xEBA)?;
                // Remove Fi text Not letting you leave machi 3
                bzs.lay[1].obj.remove_by_id(0x66B9)?;
                // Remove Fi text after machi 1
                bzs.lay[1].obj.remove_by_id(0x66B8)?;
                // Remove G1 Feet cs
                bzs.lay[1].stag.remove_by_id(0xFEEC)?;
                // extra Arrow Pot next to Entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = -8600f32;
                obj.posy = -903.477051f32;
                obj.posz = -1450f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // extra bomb Pot next to Entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xBFFFFFF;
                obj.posx = -8500f32;
                obj.posy = -903.477051f32;
                obj.posz = -1500f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFD01;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // extra bomb Pot next to VP Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xBFFFFFF;
                obj.posx = 7200f32;
                obj.posy = 2103.08911f32;
                obj.posz = -9500f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFD01;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove Faron soth fi text
                bzs.lay[5].obj.remove_by_id(0x52B6)?;
            }
            _ => (),
        },
        "F101" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Remove goddess cube force hit trigger
                bzs.lay[1].obj.remove_by_id(0xFD05)?;
                // Remove Fi text infront of Skyview
                bzs.lay[1].obj.remove_by_id(0xFCFA)?;
                // Remove first Fi text in deep woods
                bzs.lay[1].obj.remove_by_id(0xFD09)?;
                // Remove fake trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFCF2)?;
            }
            _ => (),
        },
        "F102_1" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 0,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Water Dragon trigger after AC
                bzs.lay[3].obj.remove_by_id(0xFC59)?;
                // Remove CS after cistern
                let obj = bzs.ply.get_mut(6).unwrap();
                obj.play_cutscene = -1;
                // Water Dragon after AC
                bzs.lay[3].obj.remove_by_id(0xFC5A)?;
            }
            _ => (),
        },
        "F102" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(4) => {
                // Door to Dragon Lair
                bzs.lay[0].obj.remove_by_id(0x1000)?;
                // evntTag 5
                bzs.lay[0].stag.remove_by_id(0xFC13)?;
                // evntTag 7
                bzs.lay[0].stag.remove_by_id(0xFC12)?;
            }
            Some(1) => {
                // evntTag 2
                bzs.lay[0].stag.remove_by_id(0xFC1D)?;
                // evntTag 3
                bzs.lay[0].stag.remove_by_id(0xFC1E)?;
                // evntTag 8
                bzs.lay[0].stag.remove_by_id(0xFC26)?;
                // evntTag 9
                bzs.lay[0].stag.remove_by_id(0xFC1F)?;
                // evntTag 10
                bzs.lay[0].stag.remove_by_id(0xFC1C)?;
                // Delete Parella
                bzs.lay[1].objs.remove_by_id(0xFC2A)?;
            }
            Some(3) => {
                // evntTag 4
                bzs.lay[0].stag.remove_by_id(0xFC2F)?;
            }
            _ => (),
        },
        "F102_2" => match room {
            Some(0) => {
                // Remove Faron's Lair entry cs
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.play_cutscene = -1;
            }
            _ => (),
        },
        "F100_1" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 16,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 900,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
                // Waterdragon in Great Tree
            }
            Some(0) => {
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 1317f32;
                obj.posy = 60f32;
                obj.posz = -522f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC50;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Exit from GT to Flooded GT Layer 1
                let mut mobj = SCEN::default();
                let obj = &mut mobj;
                obj.name = zero_pad(b"F103_1");
                obj.layer = 1;
                obj.room = 0;
                obj.entrance = 5;
                bzs.scen.push(mobj);
                // Exit from GT to Flooded GT Layer 2
                let mut mobj = SCEN::default();
                let obj = &mut mobj;
                obj.name = zero_pad(b"F103_1");
                obj.layer = 2;
                obj.room = 0;
                obj.entrance = 6;
                bzs.scen.push(mobj);
                // Add WaterDragon to Inside Great Tree
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFCFF;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = -864.560546875f32;
                obj.posy = 3350f32;
                obj.posz = 513.1231689453125f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x4CCC;
                obj.anglez = 0x4FA8;
                obj.id = 0x65;
                obj.name = zero_pad(b"NpcAdr");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "F103_1" => match room {
            Some(0) => {
                // Exit from Flooded GT to GT
                let mut mobj = SCEN::default();
                let obj = &mut mobj;
                obj.name = zero_pad(b"F100_1");
                obj.layer = 1;
                obj.room = 0;
                obj.entrance = 5;
                bzs.scen.push(mobj);
                // Remove Faron Soth from CS
                let obj = bzs.evnt.get_mut(1).unwrap();
                obj.item = -1;
            }
            _ => (),
        },
        "D100" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 206,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
                // Eyes
                // Always open Bar from inside Beetle Room
                let obj = bzs.lay[0].door.get_mut(6).unwrap();
                obj.anglex = 0xFF09;
                // Remove Skyview 2 Key door
                let obj = bzs.lay[2].door.get_mut(2).unwrap();
                obj.anglex = 0xFF06;
            }
            Some(4) => {
                // Small Key Soil
                // Empty Soil
                bzs.lay[1].obj.remove_by_id(0xFC50)?;
                // Right Room Eyes
                // Right Room Eyes
                // Right Room Eyes
                // Remove forced talk to mogma in right room
                bzs.lay[2].stag.remove_by_id(0xFC51)?;
            }
            Some(1) => { // First Eye
            }
            Some(7) => {
                // Left Room Eyes
                // Left Room Eyes
                // Left Room Eyes
                // Left Room Eyes
                // Remove soil in three eye room
                bzs.lay[2].obj.remove_by_id(0xFC34)?;
            }
            Some(10) => {
                // Bar conected to chest
                let obj = bzs.lay[2].objs.modify_by_id(0x1018)?;
                do_custom_obj_patch(obj, "setscenefid", 13);
                // Bar conected to chest
                let obj = bzs.lay[1].objs.modify_by_id(0x1018)?;
                do_custom_obj_patch(obj, "setscenefid", 13);
            }
            Some(2) => {
                // Remove boards in layer 2
                bzs.lay[2].obj.remove_by_id(0xFCA0)?;
                // Remove boards in layer 2
                bzs.lay[2].obj.remove_by_id(0xFCA1)?;
            }
            Some(0) => {
                // Remove Mogma near goddess wall
                bzs.lay[2].obj.remove_by_id(0xFC4F)?;
                // Remove Mogma cs near goddess wall
                bzs.lay[2].obj.remove_by_id(0xFC4E)?;
                // Remove Mogma cs near goddess wall
                bzs.lay[2].obj.remove_by_id(0xFC4B)?;
                // Remove Mogma cs swTag near goddess wall
                bzs.lay[2].stag.remove_by_id(0xFC57)?;
                // Remove Mogma cs AreaTag 1 near goddess wall
                bzs.lay[2].stag.remove_by_id(0xFC52)?;
                // Remove Mogma cs AreaTag 2 near goddess wall
                bzs.lay[2].stag.remove_by_id(0xFC53)?;
                // Pot in start room with bombs
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xBFFFFFF;
                obj.posx = 155f32;
                obj.posy = 1124.35009765625f32;
                obj.posz = 6013f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFD01;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Pot in Middle water room with bombs
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xBFFFFFF;
                obj.posx = 702f32;
                obj.posy = 0f32;
                obj.posz = 1794f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFD02;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove initial Fi text in Skyview 1
                bzs.lay[1].obj.remove_by_id(0xFC4C)?;
                // Remove initial Fi text in Skyview 2
                bzs.lay[2].obj.remove_by_id(0xFC4A)?;
                // extra Arrow Pot next to Entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 42f32;
                obj.posy = 1124.34998f32;
                obj.posz = 6013f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            Some(9) => {
                // Pot before Spider with bombs
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xBFFFFFF;
                obj.posx = 2997f32;
                obj.posy = 300f32;
                obj.posz = -12750f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFD03;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove forced talk to mogma in front of boss door
                bzs.lay[2].stag.remove_by_id(0xFC7B)?;
            }
            Some(3) => {
                // Remove forced talk to mogma in left room
                bzs.lay[2].stag.remove_by_id(0xFC46)?;
            }
            Some(5) => {
                // Remove cutscene in hub room
                bzs.lay[1].stag.remove_by_id(0xFC85)?;
            }
            _ => (),
        },
        "D101" => match room {
            Some(10) => {
                // remove stone tablet text
                let obj = bzs.lay[0].obj.modify_by_id(0xFC11)?;
                obj.params1 = 0xFF3C0000;
                // Change Fi Trigger flag
                let obj = bzs.lay[0].obj.modify_by_id(0xFC12)?;
                obj.params1 = 0xFFFFFF01;
                obj.anglex = 0xFF3C;
                // Reload Exit
                let mut mobj = SCEN::default();
                let obj = &mut mobj;
                obj.name = zero_pad(b"D101");
                obj.room = 0;
                obj.layer = 0;
                obj.entrance = 0;
                obj.night = 2;
                obj.byte5 = 2;
                obj.flag6 = 0;
                obj.zero = 0;
                obj.saveprompt = 0;
                bzs.scen.push(mobj);
                // Delete cutscene inside statue
                bzs.lay[0].stag.remove_by_id(0xFC21)?;
                // Delete bottom Water Spout cutscene inside statue
                bzs.lay[0].stag.remove_by_id(0xFC1C)?;
            }
            Some(7) => {
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 371f32;
                obj.posy = -2410f32;
                obj.posz = 2592f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFD01;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            Some(0) => {
                // extra Arrow Pot next to Entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = -580f32;
                obj.posy = 0f32;
                obj.posz = 4900f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            Some(4) => {
                // Delete cutscene in basement showing bk chest
                bzs.lay[0].stag.remove_by_id(0xFC7E)?;
            }
            _ => (),
        },
        "F200" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
                // Trial
                // Trial
                // Trial
                // Gossip Stone
            }
            Some(0) => {
                // intro cs
                // First Mogma cs Fi
                bzs.lay[1].obj.remove_by_id(0xFC22)?;
                // First Mogma cs left mogma
                bzs.lay[1].obj.remove_by_id(0x1F)?;
                // First Mogma cs right mogma
                bzs.lay[1].obj.remove_by_id(0x20)?;
            }
            Some(2) => {
                // Mogma near Mogma Turf cs
                bzs.lay[1].obj.remove_by_id(0xCB9)?;
                // Trial
                // Trial
                // Forced camera when draining lava before digging mitts
                bzs.lay[1].stag.remove_by_id(0xFCD6)?;
                // CS after draining lava for key piece
                bzs.lay[1].stag.remove_by_id(0x14CC)?;
                // Remove NpcTke before circles cutscene
                bzs.lay[1].obj.remove_by_id(0xFCBF)?;
                // Keep pre circles mogma above ground
                let obj = bzs.lay[1].obj.modify_by_id(0xFCBE)?;
                obj.anglex = 0x2EFF;
            }
            Some(4) => {
                // Just saying cs
                bzs.lay[1].obj.remove_by_id(0x248C)?;
                // delete Just saying cs mogma
                bzs.lay[1].obj.remove_by_id(0x248A)?;
                // delete Just saying cs mogma
                bzs.lay[1].obj.remove_by_id(0x248B)?;
                // Propeller delete
                bzs.lay[0].obj.remove_by_id(0xFC2E)?;
                // Gossip Stone
                // remove ET Door if open ET
                bzs.lay[0].obj.remove_by_id(0x2413)?;
                // Remove 2nd key piece tower cs
                let obj = bzs.lay[0].obj.modify_by_id(0x200A)?;
                obj.params1 = 0xFFF0FF18;
                // Remove thrill digger tower cs
                let obj = bzs.lay[0].obj.modify_by_id(0x1C0C)?;
                obj.params1 = 0xCFF0FF1A;
            }
            _ => (),
        },
        "F210" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Cobal Trigger
                let obj = bzs.lay[2].obj.modify_by_id(0xFC70)?;
                do_custom_obj_patch(obj, "trigstoryfid", 909);
                // Cobal
                // mogma 1
                let obj = bzs.lay[0].obj.modify_by_id(0xFC3E)?;
                do_custom_obj_patch(obj, "trigstoryfid", 901);
                // Guld
                let obj = bzs.lay[0].obj.modify_by_id(0xFC3C)?;
                do_custom_obj_patch(obj, "trigstoryfid", 470);
                // mogma 2
                let obj = bzs.lay[0].obj.modify_by_id(0xFC3D)?;
                do_custom_obj_patch(obj, "trigstoryfid", 901);
                // Mogma Holding you back in caves
                bzs.lay[1].obj.remove_by_id(0x7B)?;
                // extra Arrow Pot Next to Entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 1000f32;
                obj.posy = -7390f32;
                obj.posz = 1950f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove Rupee Dowsing
                bzs.lay[0].obj.remove_by_id(0xFC3B)?;
            }
            _ => (),
        },
        "F211" => match room {
            Some(0) => {
                // Remove thrill digger entry CS
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.storyflag = -1;
                obj.play_cutscene = -1;
            }
            _ => (),
        },
        "F201_1" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 19,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 677,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 207,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(0) => { // Chest in front of sword
                 // Boko Base pouch chest
            }
            _ => (),
        },
        "F201_3" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 901,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 677,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 207,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(0) => {
                // Big Flames
                bzs.lay[0].obj.remove_by_id(0xFC15)?;
                // Goron Text after first frog
                bzs.lay[2].obj.remove_by_id(0xFC5A)?;
                // Goron Text after second frog
                bzs.lay[2].obj.remove_by_id(0xFC5B)?;
                // Goron Text near big frog
                bzs.lay[2].obj.remove_by_id(0xFC5C)?;
                // Goron Text near first frog
                bzs.lay[2].obj.remove_by_id(0xFC5D)?;
                // Goron Text near first frog
                bzs.lay[2].obj.remove_by_id(0xFC5E)?;
            }
            _ => (),
        },
        "F201_4" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 19,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 677,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 207,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(0) => {
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 2809f32;
                obj.posy = -4055.5771484375f32;
                obj.posz = 4700f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC30;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "D200" => match room {
            Some(1) => {
                // Ledd Text before Bomb Bag
                bzs.lay[0].obj.remove_by_id(0xFC51)?;
                // Bomb Bag from Ledd
                bzs.lay[0].obj.remove_by_id(0xFC52)?;
                // Keep Ledd after Beating ET
                let obj = bzs.lay[0].obj.modify_by_id(0xFC50)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 2047);
                // Bombs from Ledd
                let obj = bzs.lay[0].obj.modify_by_id(0xFC53)?;
                do_custom_obj_patch(obj, "trigscenefid", 9);
                // Fi after Bridge
                bzs.lay[0].obj.remove_by_id(0xFC5E)?;
                // CS before Boulder to bombs
                bzs.lay[0].stag.remove_by_id(0xFC6D)?;
                // extra Arrow Pot next to entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 800f32;
                obj.posy = 0f32;
                obj.posz = 14400f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            Some(4) => {
                // Remove cutscene showing the boss door
                bzs.lay[0].stag.remove_by_id(0xFC68)?;
                // Remove cutscene after lavafall
                bzs.lay[0].stag.remove_by_id(0xFC65)?;
                // change untrigger of lavafall in front of Boss Door
                let obj = bzs.lay[0].obj.modify_by_id(0xFC1F)?;
                obj.params1 = 0x3F02050F;
            }
            _ => (),
        },
        "B200" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: 7,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(10) => {
                // delete boulder cutscene
                bzs.lay[2].stag.remove_by_id(0xFC36)?;
                // delete fi text
                bzs.lay[2].obj.remove_by_id(0xFC30)?;
            }
            _ => (),
        },
        "D201" => match room {
            Some(0) => {
                // Mogma 1
                bzs.lay[0].obj.remove_by_id(0xFC07)?;
                // Guld cs trigger
                bzs.lay[0].obj.remove_by_id(0xFC08)?;
            }
            Some(4) => {
                // BK chest intro cs deleted
                bzs.lay[0].stag.remove_by_id(0xFC44)?;
            }
            _ => (),
        },
        "D201_1" => match room {
            Some(5) => {
                // Clawshot Target for 2nd small Key
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFC24;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = -5743f32;
                obj.posy = 650f32;
                obj.posz = -8514f32;
                obj.anglex = 0x0;
                obj.angley = 0x901E;
                obj.anglez = 0x0;
                obj.id = 0xFC20;
                obj.name = zero_pad(b"ClawSTg");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Fist Trapped Mogma CS delete
                bzs.lay[0].obj.remove_by_id(0xFC11)?;
                // Double Magmanos fight cs (can softblock)
                bzs.lay[0].stag.remove_by_id(0xFC2B)?;
                // Text after Magmanos fight 1
                bzs.lay[0].obj.remove_by_id(0xFC1E)?;
                // Text after Magmanos fight 2
                bzs.lay[0].obj.remove_by_id(0xFC23)?;
                // Underground tutorial text for mogma mitts
                bzs.lay[0].obj.remove_by_id(0xFC66)?;
                // Delete camera pan cutscene after mogma mitts
                bzs.lay[0].stag.remove_by_id(0xFC2C)?;
            }
            Some(6) => {
                // Remove Sealed Grounds intro CS flag
                let obj = bzs.evnt.get_mut(1).unwrap();
                obj.storyflag1 = -1;
            }
            Some(1) => {
                // Delete Camera Pan in first magmanos room
                bzs.lay[0].stag.remove_by_id(0xFC1B)?;
            }
            _ => (),
        },
        "B201" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 530,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 901,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: 84,
                    },
                    LYSE {
                        layer: 13,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            _ => (),
        },
        "F300" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Chest Spawns after LMF
                let obj = bzs.lay[2].objs.modify_by_id(0xFE12)?;
                do_custom_obj_patch(obj, "spawnscenefid", 30);
                // Chest on LMF
                // Remove Fi text after Tumbleweed Chest
                bzs.lay[0].obj.remove_by_id(0xFCC6)?;
                // Remove Fi text for 5 Beacons
                bzs.lay[0].obj.remove_by_id(0xFCBC)?;
                // Remove Boulder cs
                bzs.lay[0].stag.remove_by_id(0xFD53)?;
                // Remove Zelda Dowsing from LMF raising cs
                let obj = bzs.evnt.get_mut(28).unwrap();
                obj.storyflag2 = -1;
                // Remove Fi text for Trial Gate
                bzs.lay[0].obj.remove_by_id(0xFC87)?;
                // Remove Fi text for all nodes
                bzs.lay[0].obj.remove_by_id(0xCC4)?;
                // LMF entrance loadzone
                let obj = bzs.lay[0].stag.modify_by_id(0xFCEB)?;
                do_custom_sobj_patch(obj, "trigstoryfid", 8);
                // extra Arrow Pot next to first Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 1670f32;
                obj.posy = 1975.19812f32;
                obj.posz = 18750f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "F300_1" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Remove First timeshift stone cs
                bzs.lay[0].stag.remove_by_id(0xFC47)?;
                // Remove Fi text for Trial Gate
                bzs.lay[0].obj.remove_by_id(0xFC2D)?;
                // extra Arrow Pot next to first Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 10200f32;
                obj.posy = 2299.69092f32;
                obj.posz = 35300f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove fake trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC59)?;
            }
            Some(1) => {
                // Remove fake trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC0A)?;
            }
            Some(2) => {
                // Remove fake trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC62)?;
            }
            _ => (),
        },
        "F300_2" => match room {
            Some(0) => {
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 604f32;
                obj.posy = 245f32;
                obj.posz = -6672f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC50;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Fi text for generator
                bzs.lay[0].obj.remove_by_id(0xFC24)?;
                // Remove Fi text for all nodes
                bzs.lay[0].obj.remove_by_id(0xFC23)?;
            }
            _ => (),
        },
        "F300_3" => match room {
            Some(0) => {
                // Fi text for generator
                bzs.lay[0].obj.remove_by_id(0xFC28)?;
                // Remove Fi text for all nodes
                bzs.lay[0].obj.remove_by_id(0xFC27)?;
            }
            _ => (),
        },
        "F300_4" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 2,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(0) => {
                // Harp CS
                let obj = bzs.evnt.get_mut(20).unwrap();
                obj.item = -1;
                obj.storyflag1 = -1;
                obj.storyflag2 = 935;
                // Fi text after Harp
                bzs.lay[0].obj.remove_by_id(0xFC0D)?;
                // Remove Fi text for Trial Gate
                bzs.lay[0].obj.remove_by_id(0xFC17)?;
                // Remove backwards loadingzone to LMF
                bzs.lay[0].stag.remove_by_id(0xFC3D)?;
                // Remove fake trial dowsing target
                bzs.lay[2].stag.remove_by_id(0xFCB1)?;
            }
            _ => (),
        },
        "F300_5" => match room {
            Some(0) => {
                // harp CS loadzone
                let obj = bzs.lay[0].stag.modify_by_id(0xFC03)?;
                obj.sizex = 1700f32;
                obj.sizez = 500f32;
                do_custom_sobj_patch(obj, "trigscenefid", 195);
                do_custom_sobj_patch(obj, "untrigstoryfid", 935);
                // harp CS loadzone
                let obj = bzs.lay[0].stag.modify_by_id(0xFC04)?;
                do_custom_sobj_patch(obj, "trigstoryfid", 935);
                // Area to give Reward after dungeon
                let mut mobj = AREA::default();
                let obj = &mut mobj;
                obj.posx = -11810.81640625f32;
                obj.posy = -103.16357421875f32;
                obj.posz = -4.131864070892334f32;
                obj.sizex = 700f32;
                obj.sizey = 1000f32;
                obj.sizez = 500f32;
                obj.angley = 0x0;
                bzs.area.push(mobj);
                // Trigger to give Reward after dungeon
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0x751FFFF1;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = -11810f32;
                obj.posy = -103f32;
                obj.posz = -4f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0xFF00;
                obj.anglez = 0x9C77;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"NpcTke");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Extra Bird Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFF0302FF;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 836f32;
                obj.posy = 0f32;
                obj.posz = 305f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0xBC30;
                obj.anglez = 0xFFFF;
                obj.id = 0xFD84;
                obj.name = zero_pad(b"saveObj");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].objs.push(mobj);
                // Extra Dungeon Exit
                let mut mobj = SCEN::default();
                let obj = &mut mobj;
                obj.name = zero_pad(b"F300");
                obj.room = 0;
                obj.layer = 0;
                obj.entrance = 5;
                obj.night = 2;
                obj.byte5 = 2;
                obj.flag6 = 0;
                obj.zero = 0;
                obj.saveprompt = 0;
                bzs.scen.push(mobj);
            }
            _ => (),
        },
        "F301_1" => match room {
            Some(0) => {
                // Skipper's Text at first time in Sand
                bzs.lay[0].obj.remove_by_id(0xFC05)?;
                // Area Block to Shipyard 1
                bzs.lay[0].stag.remove_by_id(0xFC63)?;
                // Area Block to Shipyard 2
                bzs.lay[0].stag.remove_by_id(0xFC61)?;
                // Area Block to Shipyard 3
                bzs.lay[0].stag.remove_by_id(0xFC60)?;
                // Area Block to Shipyard 4
                bzs.lay[0].stag.remove_by_id(0xFC62)?;
                // Area Block to Pirate Stronghold
                bzs.lay[0].stag.remove_by_id(0xFC65)?;
                // Area Block to Pirate Stronghold
                bzs.lay[0].stag.remove_by_id(0xFC66)?;
                // Area Block to Pirate Stronghold
                bzs.lay[0].stag.remove_by_id(0xFC67)?;
                // No Sandship beaten layer in sandship
                let obj = bzs.scen.get_mut(5).unwrap();
                obj.layer = 1;
                // Move sandship load to layer 0
                // Cutscene after shipyard
                bzs.lay[0].obj.remove_by_id(0xFC07)?;
                // remove entrance cutscene
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.storyflag = -1;
                obj.play_cutscene = -1;
            }
            _ => (),
        },
        "F301" => match room {
            Some(0) => {
                // No Sandship beaten layer in sandship
                let obj = bzs.scen.get_mut(4).unwrap();
                obj.layer = 1;
                // Remove Skipper Text with White Sword
                bzs.lay[0].obj.remove_by_id(0xFC0F)?;
            }
            _ => (),
        },
        "F301_2" => match room {
            Some(1) => {
                // Fi Text at beginning
                bzs.lay[0].obj.remove_by_id(0xFC0A)?;
                // Fi Text after placing orb
                bzs.lay[0].obj.remove_by_id(0xFC0B)?;
            }
            Some(3) => {
                // Fi Text near timeshift orb
                bzs.lay[0].obj.remove_by_id(0xFC06)?;
            }
            Some(6) => {
                // CS before second lever
                bzs.lay[0].stag.remove_by_id(0xFC28)?;
            }
            _ => (),
        },
        "F301_3" => match room {
            Some(0) => {
                // Text after intro
                bzs.lay[0].obj.remove_by_id(0xFC30)?;
                // remove entrance cutscene
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.storyflag = -1;
                obj.play_cutscene = -1;
            }
            _ => (),
        },
        "F301_4" => match room {
            Some(0) => {
                // Text after intro
                bzs.lay[1].obj.remove_by_id(0xFC6E)?;
                // Door to Construction always open
                let obj = bzs.lay[0].objs.modify_by_id(0xFC05)?;
                obj.params1 = 0xF7FFFC20;
                // remove entrance cutscene
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.storyflag = -1;
                obj.play_cutscene = -1;
                // Gossip Stone
            }
            None => { // Gossip Stone
            }
            _ => (),
        },
        "F301_5" => match room {
            Some(0) => {
                // Text after chest
                bzs.lay[0].obj.remove_by_id(0xFC1B)?;
            }
            _ => (),
        },
        "F301_6" => match room {
            Some(0) => {
                // Text after intro
                bzs.lay[0].obj.remove_by_id(0xFC07)?;
                // Ship dowsing
                bzs.lay[0].obj.remove_by_id(0xFC08)?;
                // remove entrance cutscene
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.storyflag = -1;
                obj.play_cutscene = -1;
                // Removeing Nose Rupee 1
                bzs.lay[2].obj.remove_by_id(0xFC46)?;
                // Removeing Nose Rupee 2
                bzs.lay[2].obj.remove_by_id(0xFC47)?;
                // Forcing Pillar Rupee 1 on layer 0
                // Forcing Pillar Rupee 2 on layer 0
            }
            _ => (),
        },
        "F301_7" => match room {
            Some(0) => {
                // Text near minecart door
                bzs.lay[0].obj.remove_by_id(0xFC04)?;
                // Door to outside
                let obj = bzs.lay[0].objs.modify_by_id(0xFC01)?;
                obj.params1 = 0xF7FFFC20;
            }
            _ => (),
        },
        "D300" => match room {
            Some(4) => {
                // Dust in Gust Bellow room Blocking Door
                bzs.lay[0].sobj.remove_by_id(0xFC35)?;
                // Wall in Gust Bellow room Blocking Door
                bzs.lay[0].sobj.remove_by_id(0xFC4E)?;
                // Door in Gust Bellow room Blocking Door
                let obj = bzs.lay[0].objs.modify_by_id(0xFC12)?;
                obj.params1 = 0xF7FFFC20;
            }
            Some(6) => {
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = -6150f32;
                obj.posy = 1050f32;
                obj.posz = -10108f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC50;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            Some(0) => {
                // extra Arrow Pot next to entrance Statue
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = -1100f32;
                obj.posy = 0f32;
                obj.posz = 2200f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "D300_1" => match room {
            Some(5) => {
                // Fi Text in front of boss door
                bzs.lay[0].obj.remove_by_id(0xFC71)?;
                // anti softlock bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 4716f32;
                obj.posy = 600f32;
                obj.posz = -14716f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            None => {
                // Close door to BK room from both sides
                let obj = bzs.lay[0].door.get_mut(6).unwrap();
                obj.anglex = 0x1313;
            }
            Some(8) => {
                // visual fence from BK room side
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xCF134401;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 5050f32;
                obj.posy = 600f32;
                obj.posz = -14350f32;
                obj.anglex = 0xFF00;
                obj.angley = 0x4000;
                obj.anglez = 0xFFFF;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"Fence");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "D301" => match room {
            Some(0) => {
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 6397f32;
                obj.posy = -1243.4300537109375f32;
                obj.posz = 67f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC50;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Heart Container on normal layer
                // Candle on layer 1
                // load goddess crest rel
                // Fi text after hitting Sandship Crest
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFF01;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 0f32;
                obj.posz = 0f32;
                obj.angley = 0xFFFF;
                obj.anglez = 0x9CAC;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"NpcTke");
                do_custom_obj_patch(obj, "trigstoryfid", 933);
                do_custom_obj_patch(obj, "trigscenefid", 84);
                do_custom_obj_patch(obj, "untrigscenefid", 87);
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[1].obj.push(mobj);
                // Trigger Flame CS
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xC303FF07;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = -4118f32;
                obj.posy = 500f32;
                obj.posz = 1914f32;
                obj.sizex = 50000f32;
                obj.sizey = 500f32;
                obj.sizez = 50000f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xFFFF;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"ScChang");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].stag.push(mobj);
                // Flame CS Exit
                let mut mobj = SCEN::default();
                let obj = &mut mobj;
                obj.name = zero_pad(b"B301");
                obj.room = 0;
                obj.layer = 13;
                obj.entrance = 4;
                obj.night = 2;
                obj.byte5 = 0;
                obj.flag6 = 0;
                obj.zero = 0;
                obj.saveprompt = 0;
                bzs.scen.push(mobj);
                // Fi text for revealing timeshift stone
                bzs.lay[1].obj.remove_by_id(0xFC4C)?;
            }
            None => { // Heart Container on normal layer
                 // candle arcs
                 // candle arcs
            }
            Some(9) => {
                // Remove Boss Door loadzone after beating dungeon
                let obj = bzs.lay[4].stag.modify_by_id(0xFC45)?;
                obj.anglez = 0x3A5;
                // Fi text infront of Boss Door
                bzs.lay[4].obj.remove_by_id(0xFC43)?;
            }
            Some(7) => {
                // Fi text at generator
                bzs.lay[1].obj.remove_by_id(0xFC0F)?;
            }
            Some(5) => {
                // Fi text at generator
                bzs.lay[1].obj.remove_by_id(0xFC12)?;
            }
            Some(14) => {
                // Fi text after boss key chest
                bzs.lay[3].obj.remove_by_id(0xFC1D)?;
            }
            Some(15) => {
                // Fi text after Scervo
                bzs.lay[2].obj.remove_by_id(0xFC07)?;
                // Fi text after bow chest
                bzs.lay[2].obj.remove_by_id(0xFC08)?;
            }
            _ => (),
        },
        "D301_1" => match room {
            Some(0) => {
                // Fi text before tentalus
                bzs.lay[0].obj.remove_by_id(0xFC1D)?;
                // Fi text before tentalus
                bzs.lay[0].obj.remove_by_id(0xFC1E)?;
            }
            _ => (),
        },
        "F302" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 2,
                    night: 0,
                    storyflag: -1,
                }];
                // Unlock Door
                let obj = bzs.lay[0].door.modify_by_id(0x2BFF)?;
                obj.anglex = 0xFFFF;
            }
            Some(0) => {
                // Patch Entry of Thunderdragon after heal
                let obj = bzs.lay[2].obj.modify_by_id(0x10D0)?;
                do_custom_obj_patch(obj, "talk_behaviour", 46070);
                // Delete trigger preventing you from moveing over bridge
                bzs.lay[0].obj.remove_by_id(0xFC06)?;
                // Patch wounded Thuderdragon to always trigger
                let obj = bzs.lay[2].obj.modify_by_id(0x10D1)?;
                do_custom_obj_patch(obj, "trigstoryfid", u32::MAX);
                // Move Key to Layer 2
                // patch FrmLand
                let obj = bzs.lay[0].obj.modify_by_id(0xFC05)?;
                obj.params1 = 0xFF4D11E2;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 9804.2412109375f32;
                obj.posy = 350f32;
                obj.posz = -4532.95361328125f32;
                obj.anglex = 0x0;
                obj.angley = 0x4000;
                obj.anglez = 0x0;
                obj.name = zero_pad(b"Soil");
                // delete Fi after Lanayru SotH
                bzs.lay[2].obj.remove_by_id(0xFCC0)?;
                // Remove Lanayru Soth from CS
                let obj = bzs.evnt.get_mut(8).unwrap();
                obj.item = -1;
                // extra Bomb flower
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xFFFFFFFF;
                obj.posx = 4100f32;
                obj.posy = 28.9521332f32;
                obj.posz = -3200f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFC50;
                obj.name = zero_pad(b"Bombf");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "F303" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: 208,
                    },
                    LYSE {
                        layer: 0,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(0) => {
                // Delete Wall blocking path to Gorge
                bzs.lay[1].sobj.remove_by_id(0xFC62)?;
                // Move Golo out of the Way
                let obj = bzs.lay[1].obj.modify_by_id(0xFC5C)?;
                obj.posx = -195f32;
                obj.posy = 0f32;
                obj.posz = 2146f32;
                // Delete temp rock in the back
                bzs.lay[1].objs.remove_by_id(0xFC61)?;
                // Fi text after chest
                bzs.lay[0].obj.remove_by_id(0xFC25)?;
                // Delete cutscene
                bzs.lay[0].stag.remove_by_id(0xFC41)?;
                // never untrigger goron
                let obj = bzs.lay[1].obj.modify_by_id(0xFC5C)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 2047);
            }
            _ => (),
        },
        "F402" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 6,
                        night: 0,
                        storyflag: 133,
                    },
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 132,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 13,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 140,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(2) => {
                // Delete LTF Tree
                bzs.lay[0].obj.remove_by_id(0xFC06)?;
                // SotH start cs
                bzs.lay[4].obj.remove_by_id(0xFC4F)?;
                // Groose Tree cs
                bzs.lay[4].obj.remove_by_id(0xFC4E)?;
                // Remove cs when entering ST
                let obj = bzs.ply.get_mut(0).unwrap();
                obj.play_cutscene = -1;
                // Raise GoT CS trigger
                let mut mobj = SOBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xC303FF02;
                obj.params2 = 0xFF5FFFFF;
                obj.posx = 0f32;
                obj.posy = 7000f32;
                obj.posz = 10971.697265625f32;
                obj.sizex = 20000f32;
                obj.sizey = 20000f32;
                obj.sizez = 20000f32;
                obj.anglex = 0xFFFF;
                obj.angley = 0x0;
                obj.anglez = 0xF954;
                obj.id = 0xFC00;
                obj.name = zero_pad(b"ScChang");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[2].stag.push(mobj);
                // to BtT unlock
                let obj = bzs.lay[0].objs.modify_by_id(0xFC00)?;
                obj.anglex = 0xFF00;
                // to BtT unlock
                let obj = bzs.lay[0].objs.modify_by_id(0xFC01)?;
                obj.anglex = 0xFF00;
                // Impa text near Door after GoT
                bzs.lay[2].obj.remove_by_id(0xFC49)?;
                // Impa text before imp 2 trigger
                bzs.lay[3].obj.remove_by_id(0xFC4C)?;
                // BotG item trigger extended
                let obj = bzs.area.get_mut(1).unwrap();
                obj.posx = 0f32;
                obj.posy = 7000f32;
                obj.posz = 9600f32;
                obj.sizex = 3600f32;
                obj.sizey = 2000f32;
                obj.sizez = 3000f32;
                // Remove Music and shaking
                let obj = bzs.evnt.get_mut(5).unwrap();
                obj.storyflag2 = -1;
                obj.sceneflag1 = 7;
                // Unforce layer after Raise GoT CS
                let obj = bzs.scen.get_mut(3).unwrap();
                obj.layer = 0;
                // Remove Goddess Statue falling down storyflag
                let obj = bzs.evnt.get_mut(7).unwrap();
                obj.storyflag2 = -1;
                // Delete post levias impa
                bzs.lay[0].obj.remove_by_id(0xFC17)?;
                // Impa triggers after raising GoT instead of Farores Courage
                let obj = bzs.lay[0].obj.modify_by_id(0xFC04)?;
                do_custom_obj_patch(obj, "trigstoryfid", 340);
                // Delete Imp 2 beaten cs inside
                bzs.lay[4].obj.remove_by_id(0xFC4D)?;
                // Delete Imp 2 beaten cs inside
                bzs.lay[4].obj.remove_by_id(0xFC4C)?;
                // extra Arrow Pot Next to Fairy
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFFFFFF0;
                obj.params2 = 0xCFFFFFF;
                obj.posx = 1215f32;
                obj.posy = 7700f32;
                obj.posz = 12700f32;
                obj.anglex = 0x0;
                obj.angley = 0x0;
                obj.anglez = 0x0;
                obj.id = 0xFE50;
                obj.name = zero_pad(b"Tubo");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
                // Remove fake Faron trial dowsing target
                bzs.lay[0].stag.remove_by_id(0xFC3D)?;
            }
            _ => (),
        },
        "F401" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 705,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 704,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 703,
                    },
                    LYSE {
                        layer: 5,
                        night: 0,
                        storyflag: 133,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 13,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(1) => {
                // Ruined save
                bzs.lay[1].obj.remove_by_id(0xFC8E)?;
                // Groosenator before imp 2
                bzs.lay[3].obj.remove_by_id(0xFC9D)?;
                // Fi text for Trial
                bzs.lay[0].obj.remove_by_id(0xFC09)?;
                // Remove fake Faron trial dowsing target
                bzs.lay[2].stag.remove_by_id(0xFCA3)?;
            }
            _ => (),
        },
        "F400" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 13,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 9,
                    },
                    LYSE {
                        layer: 2,
                        night: 0,
                        storyflag: 36,
                    },
                ];
            }
            Some(0) => {
                // Goron text trigger doesn't disappear after Sandship
                let obj = bzs.lay[3].obj.modify_by_id(0xFC95)?;
                do_custom_obj_patch(obj, "untrigstoryfid", 2047);
                // Goron doesn't disappear after Sandship
                let obj = bzs.lay[3].obj.modify_by_id(0xFC94)?;
                do_custom_obj_patch(obj, "trigstoryfid", 2047);
                do_custom_obj_patch(obj, "untrigstoryfid", 2047);
                // Goron after Skyview
                bzs.lay[0].obj.remove_by_id(0xFC2E)?;
                // Goron before unlocking goddess Walls
                bzs.lay[0].obj.remove_by_id(0xFC2F)?;
                // Fi text for Trial
                bzs.lay[0].obj.remove_by_id(0xFC5B)?;
                // Remove fake trial dowsing
                bzs.lay[0].stag.remove_by_id(0xFC8A)?;
            }
            _ => (),
        },
        "F404" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![LYSE {
                    layer: 1,
                    night: 0,
                    storyflag: -1,
                }];
            }
            Some(2) => {
                // Remove TMS from CS
                let obj = bzs.evnt.get_mut(0).unwrap();
                obj.item = -1;
                // Delete post-ghirahim 3 impa
                bzs.lay[0].obj.remove_by_id(0xFC05)?;
                // Trigger to Check Triforces
                let mut mobj = OBJ::default();
                let obj = &mut mobj;
                obj.params1 = 0xFFEA1400;
                obj.params2 = 0xFF1FFFFF;
                obj.posx = 0f32;
                obj.posy = 7600f32;
                obj.posz = 8250f32;
                obj.anglex = 0x32FF;
                obj.angley = 0xFFFF;
                obj.anglez = 0xC42C;
                obj.id = 0xFC40;
                obj.name = zero_pad(b"NpcTke");
                highest_used_id += 1;
                obj.id = highest_used_id | (!0x3FF & obj.id);
                bzs.lay[0].obj.push(mobj);
            }
            _ => (),
        },
        "F403" => match room {
            None => {
                // Layer override
                bzs.lyse = vec![
                    LYSE {
                        layer: 4,
                        night: 0,
                        storyflag: 726,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: 530,
                    },
                    LYSE {
                        layer: 3,
                        night: 0,
                        storyflag: 486,
                    },
                    LYSE {
                        layer: 7,
                        night: 0,
                        storyflag: 134,
                    },
                    LYSE {
                        layer: 1,
                        night: 0,
                        storyflag: 347,
                    },
                    LYSE {
                        layer: 13,
                        night: 0,
                        storyflag: -1,
                    },
                ];
            }
            Some(1) => {
                // Skip Ghirahim 3 Fight
                let obj = bzs.evnt.get_mut(1).unwrap();
                obj.exit_id = 7;
                // Skip Demise Fight
                let obj = bzs.scen.get_mut(8).unwrap();
                obj.name = zero_pad(b"F404");
                obj.room = 2;
                obj.layer = 14;
                obj.entrance = 5;
                obj.night = 2;
                obj.byte5 = 1;
            }
            _ => (),
        },
        "F407" => match room {
            Some(0) => {
                // Sky Keep CS remove Storyflag
                let obj = bzs.evnt.get_mut(2).unwrap();
                obj.storyflag2 = -1;
                // Sky Keep CS remove Storyflag
                let obj = bzs.evnt.get_mut(3).unwrap();
                obj.storyflag2 = -1;
            }
            _ => (),
        },
        "S200" => match room {
            Some(2) => {
                // Unforce layer
                let obj = bzs.scen.get_mut(1).unwrap();
                obj.layer = 0;
            }
            _ => (),
        },
        _ => (),
    }
    Ok(())
}
